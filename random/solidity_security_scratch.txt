- Smart contracts are made of bytecode stored at particular addresses

- You call the Solidity compiler with `solc`

- In the Ethereum world state you have externally owned accounts (EOA) and contract accounts
    - An EOA is controlled by a private key and cannot contain EVM code
        - Account state has nonce, balance
    - A contract account is controlled by EVM code and contains EVM code
        - Account state has nonce, balance, storage hash, code hash



- Defines a set of opcodes via Gavin Wood's yellow paper
    - Arithmetic operations (ADD, SUB, MUL, DIV, ...)
    - Bitwise operations (AND, OR, XOR, ...)
    - Context and block information (GASPRICE, GASLIMIT, NUMBER, ...)
    - Stack, memory & storage operations (PUSH, POP, MSTORE, SSTORE, MLOAD, SLOAD)
    - Cryptographic function (SHA3)
    - ...
- EVM uses "pseudo-registers" - not standard registers like other VMs
    - No registers means the invocation of all instructions and parameter passing are performed via the EVM stack
- EVM uses 160-bit addresses
- EVM outputs logs
- EVM introduces the concept of Gas
- Important distinction: Stack, Memory & Storage
    - Again, all EVM operations are performed on the stack
        - Accessed via PUSH, POP, COPY, SWAP, etc.
    - Memory is volatile memory, refreshed and cleared for each message call
        - Accessed via MSTORE, MLOAD
        - More costly the larger it grows because it scales quadratically
    - Storage is a persistent memory area, declared outside of user-defined functions
        - Accessed via SSTORE, SLOAD
        - Costly to read and very expensive to write
- Contract Application Binary Interface (ABI)
    - Standard way to interact with contracts in the Ethereum ecosystem, both from outside the blockchain and for contract-to-contract interaction



Floating points and precision

- There is no fixed point type in Solidity yet
- Developers are required to implement their own using the standard integer data types and this is prone to failure

- Don't roll your own!
    - Use safe libraries that allow for floating points
        - i.e. MakerDAO's DSMath
- Or do...
    - Ensure that any ratios or rates you are using allow for large numerators in fractions
        - Use `weiPerTokens` instead of `tokensPerEth`
    - Mind your order of operations
        - `msg.value*tokenPerEth/weiPerEth` instead of `msg.value/weiPerEth*tokenPerEth`

LEFT OFF ON UNEXPECTED ETHER (1/5) https://github.com/sigp/presentations/blob/master/Sigma%20Prime%20-%20Solidity%20security%20-%20Breaking%20smart%20contracts%20for%20fun%20and%20profit.pdf




